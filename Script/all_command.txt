######--- sql plus ---######
#เปิดให้แสดงคำสั่งเวลาใช้งาน spool
show echo
set echo on

#record log
spool

#describe table infomation
desc table_name

#format column length
column grade_level format A20

#clear screen
cl scr

#show defined , undefine variable
define
undefine col1

#edit last script
edit

#show last script
list

#change txt in script
c/old_value/new_value

#save script
save c:\ex1.sql
save {filename} replace


######--- system ---######
#system table
user_table
user_constraints
user_cons_columns


######--- sql command ---######
#show data length
length()
#show column info
dump()

#concat with single qoute
select last_name || q'[word's]' from table;

#escape operator use \
select * from employees where last_name like '%_\%S_%' escape '\';

#define variable
select &&col1, &col2 from table order by &col1;

#create table
CREATE TABLE [schema.]table_name(
	column_name datatype(size)) [DEFAULT expr] [column_constraint,
	...,
	...,
	[CONSTRAINT constraint_name] constraint_type (column1, column2, ...),
)
#defferable initially defferred (ไม่เช็ค constraint จนกว่าจะ commit)
constraint aa_uk unique(a1) defferable initially defferred;
### not null can only defind in column level
### CONSTRAINT xx_fk FOREIGN KEY (col1) REFERENCES other_table(pk_column) /// only table level need fk column
# FK function
ON DELETE CASCADE
ON DELETE SET NULL


#create table with sub query
create table dept as (select * from departments);
###create table from sub-query the constraint just initial not null only (other constraint must alter before create table)


#create temporary table ///ข้อมูลจะหายไปทุกครั้งที่จบ transaction(commit, rollback) แต่ table จะยังอยู่
CREATE GLOBAL TEMPORARY TABLE table_name (
	aa number(1)
);


#alter table
alter table table_name drop constraint constraint_name;
alter table a1 disable validate constraint a1_a11_nn; #disable validate
alter table a1 add(a13 number(5) constraint a1_a13_ck check(a13>0)); #add
alter table a1 modify(a11 number(5) constraint a1_a11_pk primary key); #modify
alter table a1 modify(a11 number(5) default 1); #modify
alter table a1 drop constraint a1_a11_nn; #drop constraint
alter table a1 drop column a13; #drop column
alter table a1 rename column a11 to a15; #rename column
alter table a1 read only; #make table read only
alter table a1 read write; #make table can read & write


#วิธีการทำ enable, disable validate, novalidate
alter table temp1 disable novalidate constraint t1_pk;
alter table temp1 disable validate constraint t1_pk;
alter table temp1 enable novalidate constraint t1_pk;
alter table temp1 enable validate constraint t1_pk;


#drop, purge, flashback
drop table table_name;
drop table table_name purge;
select * from recyclebin;
flashback table table_name to before drop;
flashback table table_name to before drop rename to new_table_name;


#date format
'DD-MON-RRRR HH:MI:SS AM' 24H

#interval
interval year([digit]) to month
interval day([digit]) to second
insert into table value (interval '33' month);
(interval '2500' second)
(interval '25 2' day to hour)


#####grant permission (ให้สิทธิ์ในการ select, update ที่ table departments ให้แก่ user osqln01)
grant select, update on departments to osqln01;

#connected user
show user

#role privilege
desc role_sys_privs

#object privilege
desc role_tab_privs

#user role
desc user_role_privs

#what receive table privilege and from who?
desc user_tab_privs_recd

#what receive column privilege and from who?
desc user_col_privs_recd

#who made change to my table
desc user_tab_privs_made

#dba privilege (only user system)
desc dba_sys_privs

#grant
grant update (enployee_id, last_name) on employees to hr;
grant select on employees to scott with grant option;
grant select on osqln01.employees to hr with grant option;
grant create table to scott with admin option;
grant create role to osqln01;
grant a_role to osqln01, hr;
///// cant't grant select only some column to user , need to create view and grant view to user ////

#revoke
revoke select on employees from scott;

#role
create role a_role;
grant create view, create sequence to a_role;
grant a_role to b_role;

alter user osqln01 identified by [new_password];


#สร้างชื่อเล่นให้กับ table(ถาวร) //create object(table) nickname
create synonym b1 for osqln01.dept; 

#วิธีการทำ savepoint
insert into detp value(555,'b',100,1700);
insert into detp value(666,'c',100,1700);
savepoint I2;
update dept set department_name = 'c' where department_id in (80,90);
savepoint u2;
rollback to I2;


#Single Row Functions
-- number function
round(expression, floating point) // after . = + , before . = - // >= 5 up , < 5 down
trunc(expression, floating point) // round down
mod(1600, 300) // modulo 1600%300 = 100

--date function
sysdate
to_date(sysdate, 'DD-MON-RR HH:MI:SS AM') // DD-MM-YYYY HH:MI:SS
to_char()
months_between('01-SEP-95', '11-JAN'-94)
add_months('31-JAN-96', 1)
next_day('01-SEP-95', 'FRIDAY') // find next friday
last_day('01-FEB-95')
round(sysdate, MONTH/YEAR)
trunc(sysdate, MONTH/YEAR)


TO_CHAR()
TO_NUMBER()
TO_DATE()

select '1' + '2' from dual; // result = 3 with implicit convert
select 'A' + 'B' // error


to_char date format {D, DD, DDD, Day, year, YEAR, MM, MON, MONTH, th}
fm for ignore space & zero // exam => select to_char(hire_date, 'fmMonth DD, Year')
fx force format must the same
spth date from number to text; exam ddspth


select to_char(hire_date, 'Month DD, Year') // result = November 16, Nineteen ninety-Nine
select to_number('50.00', '99.99') // result = 50
select to_char(salary, '$9,999.99')

to_date('November 16, 1999', 'Month dd, RRRR')


NVL(column1, value)
NVL2(column1, column2, value)
NULLIF(column1, value)
COALESCE(column1, column2, column_n)


#Multi rows function
select avg(distinct nvl(commission_pct, 0)) from employees;
select count(distinct job_id), count(distinct commission_pct) from employees;


ex
select count(distinct job_id) from employees;

select sum(salary) from employees where job_id = 'IT_PROG';

select trunc(max(salary)), trunc(min(salary)), trunc(sum(salary)), trunc(avg(salary)) from employees;

select job_id, max(salary), min(salary), sum(salary), avg(salary) from employees where department_id in (90, 110) group by job_id;

select department_id, avg(salary) from employees group by department_id having count(employee_id) > 10;


#Joins
desc user_cons_columns;
desc user_constraints;


select last_name, department_id, manager_id from employees natural join departments;

select last_name, employees.department_id, manager_id from employees join departments using (manager_id);

select last_name, department_id, manager_id
from employees e
left outer join departments d
	on e.department_id = d.department_id;
	
select e.employee_id, e.last_name, e.manager_id, m.employee_id, m.last_name from employees e left join employees m on e.manager_id = m.employee_id order by e.employee_id;


select count(e.employee_id), m.last_name
from employees e 
left join employees m on e.manager_id = m.employee_id 
where m.last_name = 'King'
group by m.last_name;


------------------------
